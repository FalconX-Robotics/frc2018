public class AutoScale extends CommandGroup{

  public AutoScale(char position, char side){
    
    if(position == 'a'){
      if(side == 'l'){
        addSequential(new DriveDistance(AutoMeasures.TO_SCALE_Y));
		    addSequential(new TurnAngle(90));
		    addSequential(new DriveDistance(AutoMeasures.TO_SCALE_X));
	      addSequential(new MoveElevatorToPosition(AutoMeasures.SCALE_HEIGHT));
		    addParallel(new MoveRolleyGrabberRightSide(-0.7));
		    addSequential(new MoveRolleyGrabberLeftSide(0.7));
      }
      else if(side == 'r'){
        addSequential(new DriveDistance(AutoMeasures.TO_PLATFORM_ZONE_Y));
		    addSequential(new TurnAngle(90));
		    addSequential(new DriveDistance(264));
		    addSequential(new TurnAngle(-90));
		    addSequential(new DriveDistance(AutoMeasures.TO_SCALE_Y - AutoMeasures.TO_PLATFORM_ZONE_Y));
		    addSequential(new TurnAngle(-90));
		    addSequential(new DriveDistance(AutoMeasures.TO_SCALE_X));
		    addSequential(new MoveElevatorToPosition(AutoMeasures.SCALE_HEIGHT));
		    addParallel(new MoveRolleyGrabberRightSide(-0.7));
		    addSequential(new MoveRolleyGrabberLeftSide(0.7));
      }
    }
    else if(position == 'b'){
    	if(side == 'l'){
		addSequential(new DriveDistance(AutoMeasures.INITIAL_DRIVE_FORWARD));
		addSequential(new TurnAngle(-90));
		addSequential(new DriveDistance(AutoMeasures.MIDDLE_TO_LEFT));
		addSequential(new TurnAngle(90));
		addSequential(new DriveDistance(AutoMeasures.TO_SCALE_Y - AutoMeasures.INITIAL_DRIVE_FORWARD));
		addSequential(new TurnAngle(90));
		addSequential(new DriveDistance(AutoMeasures.TO_SCALE_X));
		addSequential(new MoveElevatorToPosition(AutoMeasures.SCALE_HEIGHT));
		addParallel(new MoveRolleyGrabberRightSide(-0.7));
		addSequential(new MoveRolleyGrabberLeftSide(0.7));
	}
	else if(side == 'r'){
		addSequential(new DriveDistance(AutoMeasures.INITIAL_DRIVE_FORWARD));
		addSequential(new TurnAngle(90));
		addSequential(new DriveDistance(AutoMeasures.MIDDLE_TO_RIGHT));
		addSequential(new TurnAngle(-90));
		addSequential(new DriveDistance(AutoMeasures.TO_SCALE_Y - AutoMeasures.INITIAL_DRIVE_FORWARD));
		addSequential(new TurnAngle(-90));
		addSequential(new DriveDistance(AutoMeasures.TO_SCALE_X));
		addSequential(new MoveElevatorToPosition(AutoMeasures.SCALE_HEIGHT));
		addParallel(new MoveRolleyGrabberRightSide(-0.7));
		addSequential(new MoveRolleyGrabberLeftSide(0.7));
    else if(position == 'c'){
      if(side == 'l'){
        addSequential(new DriveDistance(AutoMeasures.TO_PLATFORM_ZONE_Y));
		    addSequential(new TurnAngle(-90));
		    addSequential(new DriveDistance(264));
		    addSequential(new TurnAngle(90));
		    addSequential(new DriveDistance(AutoMeasures.TO_SCALE_Y - AutoMeasures.TO_PLATFORM_ZONE_Y));
		    addSequential(new TurnAngle(90));
		    addSequential(new DriveDistance(AutoMeasures.TO_SCALE_X));
		    addSequential(new MoveElevatorToPosition(AutoMeasures.SCALE_HEIGHT));
	      addParallel(new MoveRolleyGrabberRightSide(-0.7));
		    addSequential(new MoveRolleyGrabberLeftSide(0.7));
      }
      else if(side == 'r'){
        addSequential(new DriveDistance(AutoMeasures.TO_SCALE_Y));
		    addSequential(new TurnAngle(-90));
		    addSequential(new DriveDistance(AutoMeasures.TO_SCALE_X));
		    addSequential(new MoveElevatorToPosition(AutoMeasures.SCALE_HEIGHT));
		    addParallel(new MoveRolleyGrabberRightSide(-0.7));
		    addSequential(new MoveRolleyGrabberLeftSide(0.7));
      }
    }
